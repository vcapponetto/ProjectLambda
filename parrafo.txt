*En cuanto a los métodos abstractos, no hay cambios; las interfaces pueden tener cualquier cantidad de métodos abstractos "en sus filas".
Entonces, ¿Qué es una interfaz funcional?
Las interfaces funcionales se utilizan principalmente para permitir el paso de funciones a métodos. Esto es, que podemos pasar una implementación de una función como argumento de un método.
En el fondo, seguiremos pasando un objeto a dicho método, pero la idea de la interfaz funcional (y de la programación funcional en sí) es trabajar con funciones mas que con objetos. La interfaz funcional nos va a permitir simular que pasamos una función implementada como argumento de un método, aunque no es su único uso.
Cuando profundicemos más en las expresiones lambda, entenderemos mejor este concepto que a primera instancia puede ser confuso para los programadores que estamos acostumbrados a trabajar con objetos.
*Para que una interfaz sea funcional debe cumplir con un solo requisito: Solo debe tener un método abstracto.
*La interfaz funcional puede tener varios métodos estáticos y default si quiere, pero solo un método abstracto.
Más adelante veremos que esta característica le permite acoplarse perfectamente con las expresiones lambda.
Es posible para nosotros crear nuestras propias interfaces funcionales, sin embargo, la versión 8 de Java ha incluido una gran cantidad de estas interfaces dentro del paquete java.util.function 
